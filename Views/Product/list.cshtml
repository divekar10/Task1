@using PagedList;
@using PagedList.Mvc;
@model IPagedList<Task1.Models.Product>
@*@model IEnumerable<Task1.Models.Product>*@
@*
    @model Task1.ViewModels.ProductListViewModel
*@
@{
    ViewBag.Title = "ProductList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 style="text-align: center;">Product List</h1>


@*@Html.ActionLink("New Product", "AddProduct", "Product", null, new { @class = "btn btn-primary" })

    @Html.ActionLink("Add Category", "AddCat", "Category", null, new { @class = "btn btn-primary" })

    @Html.ActionLink("See All Categories", "Index", "Category", null, new { @class = "btn btn-primary" })*@


@if (!Model.Any())
{


    <p>We dont have any products</p>
}
else
{
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Category Name</th>
            </tr>
        </thead>
        @foreach (var products in Model)
        {
            <tr>
                <td>@products.ProductName</td>
                <td>@products.Category.CatName</td>
            </tr>
        }
    </table>
}


@Html.PagedListPager(Model, page => Url.Action("ReadOnly", new { page }))

@*<ul>

        @foreach (var item in Model)
        {
            <li>@item.Category.CatName </li>
        }
    </ul>*@