@using PagedList;
@using PagedList.Mvc;
@model IPagedList<Task1.Models.Product>
@*@model IEnumerable<Task1.Models.Product>*@
@*
    @model Task1.ViewModels.ProductListViewModel
*@
@{
    ViewBag.Title = "ProductList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Product List</h2>

<p>
    @Html.ActionLink("New Product", "AddProduct", "Product", null, new { @class = "btn btn-primary" })
</p>

@if(!Model.Any())
            {


<p>We dont have any products</p>
            }
            else
            {
<table class="table table-bordered table-hover">
    <thead>
        <tr>
        <th>Actions</th>
        <th>ProductID</th>
        <th>ProductName</th>
        <th>CatID</th>
        <th>CatName</th>
        </tr>
    </thead>
    @foreach (var products in Model)
    {
<tr>
    <td>
        @Html.ActionLink("Edit", "Edit", new { id = products.Id }, new { @class = "btn btn-primary" })
        @Html.ActionLink("Delete", "delete", new { id = products.Id }, new { @class = "btn btn-danger" })
    </td>
    <td>@products.Id</td>
    <td>@products.ProductName</td>
    <td>@products.CategoryId</td>
    <td>@products.Category.CatName</td>
</tr>
    }
</table>
}


@Html.PagedListPager(Model, page =>Url.Action("ProductList", new { page }))

@*<ul>

    @foreach (var item in Model)
    {
        <li>@item.Category.CatName </li>
    }
</ul>*@